import os
# –ò–º–ø–æ—Ä—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫
import telebot
import telebot as bot
from telebot import types
import requests
import datetime
# –ò–º–ø–æ—Ä—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
import CheckDateSheets1
import CheckDateSheets2
import ALL
import ALL2
import Zamen
import Day
import settings
smscount = 0
bot = telebot.TeleBot(settings.BotApi)
Smile_stident = 'üë®‚Äçüéì'
Smile_palec = 'üëá'
Smile_glaza = 'üëÄ'
bold = "parse_mode='HTML'"
daysOfWeek = ["–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–í—Ç–æ—Ä–Ω–∏–∫", "–°—Ä–µ–¥–∞", "–ß–µ—Ç–≤–µ—Ä–≥", "–ü—è—Ç–Ω–∏—Ü–∞", "–°—É–±–±–æ—Ç–∞", "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ"]
day = ''
IsZamen = False # –î–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫
IsAll = False # –î–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫



def read_unique_ids(msg):
    unique_ids = set()
    with open('bd.txt', 'r') as file:
        for line in file:
            # –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–±–µ–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –∏ –ø–µ—Ä–µ–Ω–æ—Å–æ–≤ —Å—Ç—Ä–æ–∫–∏
            id = line.strip()
            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ id –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–æ, –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ –Ω–µ –ø—É—Å—Ç–∞—è
            if id:
                unique_ids.add(id)
    # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    text = msg.text.replace('–≥–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ', '<b>–ì–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n</b>')
    for one in unique_ids:
        global smscount
        try:
            bot.send_message(one, text, parse_mode='HTML')
            smscount += 1
        except:
            pass
    globalsms = f'–í—Å–µ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ {smscount} –ª—é–¥—è–º'
    bot.send_message(824176864, globalsms)

def zamenGen2(msg, liter):
    today = datetime.date.today()
    weekday = today.weekday()
    weekday_name = daysOfWeek[weekday]
    bot.send_message(msg.chat.id, '–°–º–æ—Ç—Ä—é –≤–µ–∑–¥–µ, –≥–¥–µ —Ç–æ–ª—å–∫–æ –º–æ–∂–Ω–æüîé')
    if weekday_name == '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫':
        attribute_name = '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫' + liter
        SAMPLE_RANGE_NAME = getattr(settings, attribute_name)
    elif weekday_name == '–í—Ç–æ—Ä–Ω–∏–∫':
        attribute_name = '–í—Ç–æ—Ä–Ω–∏–∫' + liter
        SAMPLE_RANGE_NAME = getattr(settings, attribute_name)
    elif weekday_name == '–°—Ä–µ–¥–∞':
        attribute_name = '–°—Ä–µ–¥–∞' + liter
        SAMPLE_RANGE_NAME = getattr(settings, attribute_name)
    elif weekday_name == '–ß–µ—Ç–≤–µ—Ä–≥':
        attribute_name = '–ß–µ—Ç–≤–µ—Ä–≥' + liter
        SAMPLE_RANGE_NAME = getattr(settings, attribute_name)
    elif weekday_name == '–ü—è—Ç–Ω–∏—Ü–∞':
        attribute_name = '–ü—è—Ç–Ω–∏—Ü–∞' + liter
        SAMPLE_RANGE_NAME = getattr(settings, attribute_name)
    elif weekday_name == '–°—É–±–±–æ—Ç–∞':
        attribute_name = '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫' + liter
        SAMPLE_RANGE_NAME = getattr(settings, attribute_name)
    elif weekday_name == '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ':
        attribute_name = '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫' + liter
        SAMPLE_RANGE_NAME = getattr(settings, attribute_name)

    Day.clear()
    pol = Day.main(SAMPLE_RANGE_NAME)
    for i in range(len(pol)):
        ress = '\n'.join(pol)

    bot.send_message(msg.chat.id, '–ñ–¥—É –æ—Ç–≤–µ—Ç–∞‚è≥')
    SAMPLE_RANGE_NAME = settings.–ó–∞–º–µ–Ω—ã6–ê
    Zamen.clear()
    zam = Zamen.main(SAMPLE_RANGE_NAME)
    for i in range(len(zam)):
        resss = '\n'.join(zam)

    bot.send_message(msg.chat.id, '–û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω‚úÖ')

    CheckDateSheets2.clear()
    today = CheckDateSheets2.main()
    try:
        for i in range(len(today)):
            ressss = '\n'.join(today)
            ressss = f"<b>{ressss}</b>"
    except:
        ressss = f"<i>–û—à–∏–±–∫–∞ –≤ –ø–æ–∏—Å–∫–µ –¥–∞—Ç—ã</i>"

    if weekday_name != '–°—É–±–±–æ—Ç–∞' and weekday_name != '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ':
        if weekday_name != '–ß–µ—Ç–≤–µ—Ä–≥' and weekday_name != '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫' and weekday_name != '–í—Ç–æ—Ä–Ω–∏–∫':
            tDay = weekday_name[:-1] + '—É'
        else:
            tDay = weekday_name
    else:
        tDay = '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫'
    zamen = f'–í–æ—Ç —Ç–≤–æ–µ –æ–±—ã—á–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ <b>{tDay}</b> \n{ress} \n\n–ü–æ—Å–º–æ—Ç—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∏–∂–µ \n{ressss} \n\n{resss}'
    bot.send_message(msg.chat.id, zamen, parse_mode='HTML')
    keys(msg)


def fullGen2(msg, SAMPLE_RANGE_NAME):
    ALL2.clear()
    res = ALL2.main(SAMPLE_RANGE_NAME)
    for i in range(len(res)):
        ress = '\n'.join(res)
    bot.send_message(msg.chat.id, ress, parse_mode='HTML')
    keys(msg)

def fullGen(msg, SAMPLE_RANGE_NAME):
    ALL.clear()

    res = ALL.main(SAMPLE_RANGE_NAME)
    for i in range(len(res)):
        ress = '\n'.join(res)
    bot.send_message(msg.chat.id, ress, parse_mode='HTML')
    keys(msg)

def zamenGen(msg, liter):
    today = datetime.date.today()  # –ø–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É
    weekday = today.weekday()  # –î–æ—Å—Ç–∞–µ—Ç –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏
    weekday_name = daysOfWeek[weekday]  # –ë–µ—Ä–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–Ω—è –Ω–µ–¥–µ–ª–∏
    bot.send_message(msg.chat.id, '–°–º–æ—Ç—Ä—é –≤–µ–∑–¥–µ, –≥–¥–µ —Ç–æ–ª—å–∫–æ –º–æ–∂–Ω–æüîé')
    if weekday_name == '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫':
        attribute_name = '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫' + liter
        SAMPLE_RANGE_NAME = getattr(settings, attribute_name)
    elif weekday_name == '–í—Ç–æ—Ä–Ω–∏–∫':
        attribute_name = '–í—Ç–æ—Ä–Ω–∏–∫' + liter
        SAMPLE_RANGE_NAME = getattr(settings, attribute_name)
    elif weekday_name == '–°—Ä–µ–¥–∞':
        attribute_name = '–°—Ä–µ–¥–∞' + liter
        SAMPLE_RANGE_NAME = getattr(settings, attribute_name)
    elif weekday_name == '–ß–µ—Ç–≤–µ—Ä–≥':
        attribute_name = '–ß–µ—Ç–≤–µ—Ä–≥' + liter
        SAMPLE_RANGE_NAME = getattr(settings, attribute_name)
    elif weekday_name == '–ü—è—Ç–Ω–∏—Ü–∞':
        attribute_name = '–ü—è—Ç–Ω–∏—Ü–∞' + liter
        SAMPLE_RANGE_NAME = getattr(settings, attribute_name)
    elif weekday_name == '–°—É–±–±–æ—Ç–∞':
        attribute_name = '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫' + liter
        SAMPLE_RANGE_NAME = getattr(settings, attribute_name)
    elif weekday_name == '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ':
        attribute_name = '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫' + liter
        SAMPLE_RANGE_NAME = getattr(settings, attribute_name)

    Day.clear()
    pol = Day.main(SAMPLE_RANGE_NAME)  # –ü–æ–ª—É—á–∞–µ—Ç –ø–æ–ª–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —ç—Ç–æ—Ç –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏
    for i in range(len(pol)):
        ress = '\n'.join(pol)

    bot.send_message(msg.chat.id, '–ñ–¥—É –æ—Ç–≤–µ—Ç–∞‚è≥')
    attribute_name = '–ó–∞–º–µ–Ω—ã' + liter
    SAMPLE_RANGE_NAME = getattr(settings, attribute_name)
    Zamen.clear()
    zam = Zamen.main(SAMPLE_RANGE_NAME)  # –ü–æ–ª—É—á–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —ç—Ç–æ—Ç –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏
    for i in range(len(zam)):
        resss = '\n'.join(zam)

    bot.send_message(msg.chat.id, '–û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω‚úÖ')
    CheckDateSheets1.clear()
    today = CheckDateSheets1.main()  # –ß—Ç–æ–±—ã –Ω–µ –∑–∞–ø—É—Ç–∞—Ç—å—Å—è –±–µ—Ä–µ—Ç –¥–∞—Ç—É, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ —Å–¥–µ–ª–∞–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ
    try:
        for i in range(len(today)):
            ressss = '\n'.join(today)
            ressss = f"<b>{ressss}</b>"
    except:
        ressss = f"<i>–û—à–∏–±–∫–∞ –≤ –ø–æ–∏—Å–∫–µ –¥–∞—Ç—ã</i>"  # –í—Å–µ –º—ã –ª—é–¥–∏ –∏ –º–æ–∂–µ–º –æ—à–∏–±–∞—Ç—å—Å—è –∏ –Ω–µ –Ω–∞–ø–∏—Å–∞—Ç—å –¥–∞—Ç—É, –∞ —ç—Ç–æ –ø–æ–∑–≤–æ–ª–∏—Ç –∏–∑–±–µ–∂–∞—Ç—å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–∏

    if weekday_name != '–°—É–±–±–æ—Ç–∞' and weekday_name != '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ':
        if weekday_name != '–ß–µ—Ç–≤–µ—Ä–≥' and weekday_name != '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫' and weekday_name != '–í—Ç–æ—Ä–Ω–∏–∫':
            tDay = weekday_name[:-1] + '—É'
        else:
            tDay = weekday_name
    else:
        tDay = '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫'
    zamen = f'–í–æ—Ç —Ç–≤–æ–µ –æ–±—ã—á–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ <b>{tDay}</b> \n{ress} \n\n–ü–æ—Å–º–æ—Ç—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∏–∂–µ \n{ressss} \n\n{resss}'
    bot.send_message(msg.chat.id, zamen, parse_mode='HTML')
    keys(msg)

def catGen(msg):
    url = "https://cat14.p.rapidapi.com/v1/images/search"

    headers = {
        "x-api-key": "live_tkfn5Qu13T9qimIfGmAxBAFooC12t7GvENwLXIoJQRTgUv83zQ8mjz5cSpzahmyK",
        "X-RapidAPI-Key": "c50c02fb65msh3b35b9a0adb8463p13826fjsn3118fa23ceef",
        "X-RapidAPI-Host": "cat14.p.rapidapi.com"
    }

    response = requests.get(url, headers=headers)

    print(response.json())
    catJs = response.json()
    bot.send_photo(msg.chat.id, catJs[0]['url'])


@bot.message_handler(content_types=['video'])
def message(info):
    print(info)

@bot.message_handler(commands=['start', 'help'])
def keys(info):
    global IsAll, IsZamen
    kb = types.ReplyKeyboardMarkup(row_width=2)
    but1 = types.KeyboardButton('–ü–æ–ª–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ')
    but2 = types.KeyboardButton('–ò–∑–º–µ–Ω–µ–Ω–∏—è')
    but3 = types.KeyboardButton('–ü–æ–∫–∞–∂–∏ –∫–æ—Ç–∞üòº')
    kb.add(but1, but2, but3)
    bot.send_message(info.chat.id, '–ü—Ä–∏–≤–µ—Çüòò', reply_markup = kb)
    IsAll = False
    IsZamen = False

@bot.message_handler(func=lambda msg: msg.text == '–ü–æ–ª–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ')
def numb(info):
    global IsAll
    kb = types.ReplyKeyboardMarkup(row_width=5)
    but1 = types.KeyboardButton('5–ê')
    but2 = types.KeyboardButton('5–ë')
    but3 = types.KeyboardButton('5–í')
    but33 = types.KeyboardButton('5–ì')
    but4 = types.KeyboardButton('5–î')
    but5 = types.KeyboardButton('6–ê')
    but6 = types.KeyboardButton('6–ë')
    but7 = types.KeyboardButton('6–í')
    but8 = types.KeyboardButton('6–ì')
    but9 = types.KeyboardButton('7–ê')
    but10 = types.KeyboardButton('7–ë')
    but11 = types.KeyboardButton('7–í')
    but12 = types.KeyboardButton('7–ì')
    but13 = types.KeyboardButton('8–ê')
    but14 = types.KeyboardButton('8–ë')
    but15 = types.KeyboardButton('8–í')
    but16 = types.KeyboardButton('8–ì')
    but17 = types.KeyboardButton('9–ê')
    but18 = types.KeyboardButton('9–ë')
    but19 = types.KeyboardButton('9–í')
    but20 = types.KeyboardButton('9–ì')
    but21 = types.KeyboardButton('10–ê')
    but22 = types.KeyboardButton('10–ë')
    but23 = types.KeyboardButton('11–ê')
    but24 = types.KeyboardButton('11–ë')
    but25 = types.KeyboardButton('–ù–∞–∑–∞–¥')
    kb.add(but1, but2, but3, but33, but4)  # –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ —Å 5 –∫–Ω–æ–ø–∫–∞–º–∏ 5–î –≤—ã –ª—É—á—à–∏–µ üòòüòòüòòüòòüòòüòòüòòüòòüòòüòòüòòüòòüòò
    kb.add(but5, but6, but7, but8)
    kb.add(but9, but10, but11, but12)
    kb.add(but13, but14, but15, but16)
    kb.add(but17, but18, but19, but20)
    kb.add(but21, but22, but23, but24)
    kb.add(but25)
    bot.send_message(info.chat.id, '–í—ã–±–∏—Ä–∞–π –∫–ª–∞—Å—Å', reply_markup = kb)
    IsAll = True

@bot.message_handler(func=lambda msg: msg.text == '–ò–∑–º–µ–Ω–µ–Ω–∏—è')
def numbb(info):
    global IsZamen
    kb = types.ReplyKeyboardMarkup(row_width=5)
    but1 = types.KeyboardButton('5–ê')
    but2 = types.KeyboardButton('5–ë')
    but3 = types.KeyboardButton('5–í')
    but33 = types.KeyboardButton('5–ì')
    but4 = types.KeyboardButton('5–î')
    but5 = types.KeyboardButton('6–ê')
    but6 = types.KeyboardButton('6–ë')
    but7 = types.KeyboardButton('6–í')
    but8 = types.KeyboardButton('6–ì')
    but9 = types.KeyboardButton('7–ê')
    but10 = types.KeyboardButton('7–ë')
    but11 = types.KeyboardButton('7–í')
    but12 = types.KeyboardButton('7–ì')
    but13 = types.KeyboardButton('8–ê')
    but14 = types.KeyboardButton('8–ë')
    but15 = types.KeyboardButton('8–í')
    but16 = types.KeyboardButton('8–ì')
    but17 = types.KeyboardButton('9–ê')
    but18 = types.KeyboardButton('9–ë')
    but19 = types.KeyboardButton('9–í')
    but20 = types.KeyboardButton('9–ì')
    but21 = types.KeyboardButton('10–ê')
    but22 = types.KeyboardButton('10–ë')
    but23 = types.KeyboardButton('11–ê')
    but24 = types.KeyboardButton('11–ë')
    but25 = types.KeyboardButton('–ù–∞–∑–∞–¥')
    kb.add(but1, but2, but3, but33, but4)  # –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ —Å 5 –∫–Ω–æ–ø–∫–∞–º–∏ 5–î –≤—ã –ª—É—á—à–∏–µ üòòüòòüòòüòòüòòüòòüòòüòòüòòüòòüòòüòòüòò
    kb.add(but5, but6, but7, but8)
    kb.add(but9, but10, but11, but12)
    kb.add(but13, but14, but15, but16)
    kb.add(but17, but18, but19, but20)
    kb.add(but21, but22, but23, but24)
    kb.add(but25)
    bot.send_message(info.chat.id, '–í—ã–±–∏—Ä–∞–π –∫–ª–∞—Å—Å', reply_markup = kb)
    IsZamen = True

def nokeys(info):
    bot.send_message(info.chat.id, '–£–±—Ä–∞–ª –∫–ª–∞–≤–∏–∞—É—Ç—Ä—É', reply_markup = types.ReplyKeyboardRemove())

def compare_and_write_data(data):
    data = str(data)
    with open('bd.txt', 'r') as file:
        existing_data = file.read().splitlines()

    new_data = []

    for value in data:
        if value not in existing_data:
            new_data.append(value)

    if new_data:
        with open('bd.txt', 'a') as file:
            file.write(''.join(new_data) + '\n')

def write_data(data):
    with open('messages.txt', 'a') as file:
        file.write(''.join(data) + '\n')

@bot.message_handler(content_types=['text'])
def message(msg):
    global day, weekday_name, tDay, ress, catt
    inf = f'{msg.text} –ê–≤—Ç–æ—Ä: {msg.chat.id}'
    try:
        write_data(inf)
    except:
        print('–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏')

    try:
        compare_and_write_data(msg.chat.id)
    except:
        print('–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏')

    msg.text = msg.text.lower()
    print(msg.text, '–ê–≤—Ç–æ—Ä:', msg.chat.id)
    if '–ø—Ä–∏–≤–µ—Ç' in msg.text:
        bot.send_message(msg.chat.id, msg.text)

    elif '–≥–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ' in msg.text:
        read_unique_ids(msg)

    elif '–ø—Ä–∏—à–ª–∏ –±–¥' in msg.text:
        bot.send_document(824176864, open('bd.txt', 'rb'))

    elif '–ø—Ä–∏—à–ª–∏ —Å–º—Å' in msg.text:
        bot.send_document(824176864, open('messages.txt', 'rb'))

    elif '–∑–∞–∫–∞–Ω—á–∏–≤–∞–µ–º' in msg.text:
        settings.BotApi = '6331392580:AAHu804LMDy1zpxEvmNpNSvpfmM6XkuOuI0'

    elif '–Ω–∞–∑–∞–¥' in msg.text:
        keys(msg)

    elif '—É–±–µ—Ä–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É' in msg.text:
        nokeys(msg)

    elif '–ø–æ–∫–∞–∂–∏ –∫–æ—Ç–∞üòº' in msg.text:
        catGen(msg)

    elif '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ 5–∞' in msg.text or (IsAll == True and '5–∞' in msg.text):
        SAMPLE_RANGE_NAME = settings.–ü–æ–ª–Ω–æ–µ–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ5–ê
        fullGen(msg, SAMPLE_RANGE_NAME)

    elif '–∏–∑–º–µ–Ω–µ–Ω–∏—è 5–∞' in msg.text or (IsZamen == True and '5–∞' in msg.text):
        liter = '5–ê'
        zamenGen(msg, liter)


    elif '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ 5–±' in msg.text or (IsAll == True and '5–±' in msg.text):
        SAMPLE_RANGE_NAME = settings.–ü–æ–ª–Ω–æ–µ–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ5–ë
        fullGen(msg, SAMPLE_RANGE_NAME)

    elif '–∏–∑–º–µ–Ω–µ–Ω–∏—è 5–±' in msg.text or (IsZamen == True and '5–±' in msg.text):
        liter = '5–ë'
        zamenGen(msg, liter)

    elif '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ 5–≤' in msg.text or (IsAll == True and '5–≤' in msg.text):
        SAMPLE_RANGE_NAME = settings.–ü–æ–ª–Ω–æ–µ–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ5–í
        fullGen(msg, SAMPLE_RANGE_NAME)

    elif '–∏–∑–º–µ–Ω–µ–Ω–∏—è 5–≤' in msg.text or (IsZamen == True and '5–≤' in msg.text):
        liter = '5–í'
        zamenGen(msg, liter)

    elif '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ 5–≥' in msg.text or (IsAll == True and '5–≥' in msg.text):
        SAMPLE_RANGE_NAME = settings.–ü–æ–ª–Ω–æ–µ–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ5–ì
        fullGen(msg, SAMPLE_RANGE_NAME)

    elif '–∏–∑–º–µ–Ω–µ–Ω–∏—è 5–≥' in msg.text or (IsZamen == True and '5–≥' in msg.text):
        liter = '5–ì'
        zamenGen(msg, liter)

    elif '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ 5–¥' in msg.text or (IsAll == True and '5–¥' in msg.text):
        SAMPLE_RANGE_NAME = settings.–ü–æ–ª–Ω–æ–µ–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ5–î
        fullGen(msg, SAMPLE_RANGE_NAME)

    elif '–∏–∑–º–µ–Ω–µ–Ω–∏—è 5–¥' in msg.text or (IsZamen == True and '5–¥' in msg.text):
        liter = '5–î'
        zamenGen(msg, liter)

    elif '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ 6–∞' in msg.text or (IsAll == True and '6–∞' in msg.text):
        SAMPLE_RANGE_NAME = settings.–ü–æ–ª–Ω–æ–µ–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ6–ê
        fullGen2(msg, SAMPLE_RANGE_NAME)

    elif '–∏–∑–º–µ–Ω–µ–Ω–∏—è 6–∞' in msg.text or (IsZamen == True and '6–∞' in msg.text):
        liter = '6–ê'
        zamenGen2(msg, liter)

    elif '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ 6–±' in msg.text or (IsAll == True and '6–±' in msg.text):
        SAMPLE_RANGE_NAME = settings.–ü–æ–ª–Ω–æ–µ–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ6–ë
        fullGen2(msg, SAMPLE_RANGE_NAME)

    elif '–∏–∑–º–µ–Ω–µ–Ω–∏—è 6–±' in msg.text or (IsZamen == True and '6–±' in msg.text):
        liter = '6–ë'
        zamenGen2(msg, liter)

    elif '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ 6–≤' in msg.text or (IsAll == True and '6–≤' in msg.text):
        SAMPLE_RANGE_NAME = settings.–ü–æ–ª–Ω–æ–µ–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ6–í
        fullGen2(msg, SAMPLE_RANGE_NAME)

    elif '–∏–∑–º–µ–Ω–µ–Ω–∏—è 6–≤' in msg.text or (IsZamen == True and '6–≤' in msg.text):
        liter = '6–í'
        zamenGen2(msg, liter)

    elif '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ 6–≥' in msg.text or (IsAll == True and '6–≥' in msg.text):
        SAMPLE_RANGE_NAME = settings.–ü–æ–ª–Ω–æ–µ–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ6–ì
        fullGen2(msg, SAMPLE_RANGE_NAME)

    elif '–∏–∑–º–µ–Ω–µ–Ω–∏—è 6–≥' in msg.text or (IsZamen == True and '6–≥' in msg.text):
        liter = '6–ì'
        zamenGen2(msg, liter)

    elif '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ 7–∞' in msg.text or (IsAll == True and '7–∞' in msg.text):
        SAMPLE_RANGE_NAME = settings.–ü–æ–ª–Ω–æ–µ–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ7–ê
        fullGen2(msg, SAMPLE_RANGE_NAME)

    elif '–∏–∑–º–µ–Ω–µ–Ω–∏—è 7–∞' in msg.text or (IsZamen == True and '7–∞' in msg.text):
        liter = '7–ê'
        zamenGen2(msg, liter)

    elif '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ 7–±' in msg.text or (IsAll == True and '7–±' in msg.text):
        SAMPLE_RANGE_NAME = settings.–ü–æ–ª–Ω–æ–µ–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ7–ë
        fullGen2(msg, SAMPLE_RANGE_NAME)

    elif '–∏–∑–º–µ–Ω–µ–Ω–∏—è 7–±' in msg.text or (IsZamen == True and '7–±' in msg.text):
        liter = '7–ë'
        zamenGen2(msg, liter)

    elif '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ 7–≤' in msg.text or (IsAll == True and '7–≤' in msg.text):
        SAMPLE_RANGE_NAME = settings.–ü–æ–ª–Ω–æ–µ–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ7–í
        fullGen2(msg, SAMPLE_RANGE_NAME)

    elif '–∏–∑–º–µ–Ω–µ–Ω–∏—è 7–≤' in msg.text or (IsZamen == True and '7–≤' in msg.text):
        liter = '7–í'
        zamenGen2(msg, liter)

    elif '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ 7–≥' in msg.text or (IsAll == True and '7–≥' in msg.text):
        SAMPLE_RANGE_NAME = settings.–ü–æ–ª–Ω–æ–µ–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ7–ì
        fullGen2(msg, SAMPLE_RANGE_NAME)

    elif '–∏–∑–º–µ–Ω–µ–Ω–∏—è 7–≥' in msg.text or (IsZamen == True and '7–≥' in msg.text):
        liter = '7–ì'
        zamenGen2(msg, liter)

    elif '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ 8–∞' in msg.text or (IsAll == True and '8–∞' in msg.text):
        SAMPLE_RANGE_NAME = settings.–ü–æ–ª–Ω–æ–µ–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ8–ê
        fullGen2(msg, SAMPLE_RANGE_NAME)

    elif '–∏–∑–º–µ–Ω–µ–Ω–∏—è 8–∞' in msg.text or (IsZamen == True and '8–∞' in msg.text):
        liter = '8–ê'
        zamenGen2(msg, liter)

    elif '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ 8–±' in msg.text or (IsAll == True and '8–±' in msg.text):
        SAMPLE_RANGE_NAME = settings.–ü–æ–ª–Ω–æ–µ–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ8–ë
        fullGen2(msg, SAMPLE_RANGE_NAME)

    elif '–∏–∑–º–µ–Ω–µ–Ω–∏—è 8–±' in msg.text or (IsZamen == True and '8–±' in msg.text):
        liter = '8–ë'
        zamenGen2(msg, liter)

    elif '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ 8–≤' in msg.text or (IsAll == True and '8–≤' in msg.text):
        SAMPLE_RANGE_NAME = settings.–ü–æ–ª–Ω–æ–µ–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ8–í
        fullGen2(msg, SAMPLE_RANGE_NAME)

    elif '–∏–∑–º–µ–Ω–µ–Ω–∏—è 8–≤' in msg.text or (IsZamen == True and '8–≤' in msg.text):
        liter = '8–í'
        zamenGen2(msg, liter)

    elif '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ 8–≥' in msg.text or (IsAll == True and '8–≥' in msg.text):
        SAMPLE_RANGE_NAME = settings.–ü–æ–ª–Ω–æ–µ–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ8–ì
        fullGen2(msg, SAMPLE_RANGE_NAME)

    elif '–∏–∑–º–µ–Ω–µ–Ω–∏—è 8–≥' in msg.text or (IsZamen == True and '8–≥' in msg.text):
        liter = '8–ì'
        zamenGen2(msg, liter)

    elif '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ 9–∞' in msg.text or (IsAll == True and '9–∞' in msg.text):
        SAMPLE_RANGE_NAME = settings.–ü–æ–ª–Ω–æ–µ–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ9–ê
        fullGen(msg, SAMPLE_RANGE_NAME)

    elif '–∏–∑–º–µ–Ω–µ–Ω–∏—è 9–∞' in msg.text or (IsZamen == True and '9–∞' in msg.text):
        liter = '9–ê'
        zamenGen(msg, liter)

    elif '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ 9–±' in msg.text or (IsAll == True and '9–±' in msg.text):
        SAMPLE_RANGE_NAME = settings.–ü–æ–ª–Ω–æ–µ–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ9–ë
        fullGen(msg, SAMPLE_RANGE_NAME)

    elif '–∏–∑–º–µ–Ω–µ–Ω–∏—è 9–±' in msg.text or (IsZamen == True and '9–±' in msg.text):
        liter = '9–ë'
        zamenGen(msg, liter)

    elif '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ 9–≤' in msg.text or (IsAll == True and '9–≤' in msg.text):
        SAMPLE_RANGE_NAME = settings.–ü–æ–ª–Ω–æ–µ–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ9–í
        fullGen(msg, SAMPLE_RANGE_NAME)

    elif '–∏–∑–º–µ–Ω–µ–Ω–∏—è 9–≤' in msg.text or (IsZamen == True and '9–≤' in msg.text):
        liter = '9–í'
        zamenGen(msg, liter)

    elif '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ 9–≥' in msg.text or (IsAll == True and '9–≥' in msg.text):
        SAMPLE_RANGE_NAME = settings.–ü–æ–ª–Ω–æ–µ–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ9–ì
        fullGen(msg, SAMPLE_RANGE_NAME)

    elif '–∏–∑–º–µ–Ω–µ–Ω–∏—è 9–≥' in msg.text or (IsZamen == True and '9–≥' in msg.text):
        liter = '9–ì'
        zamenGen(msg, liter)

    elif '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ 10–∞' in msg.text or (IsAll == True and '10–∞' in msg.text):
        SAMPLE_RANGE_NAME = settings.–ü–æ–ª–Ω–æ–µ–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ10–ê
        fullGen(msg, SAMPLE_RANGE_NAME)

    elif '–∏–∑–º–µ–Ω–µ–Ω–∏—è 10–∞' in msg.text or (IsZamen == True and '10–∞' in msg.text):
        liter = '10–ê'
        zamenGen(msg, liter)

    elif '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ 10–±' in msg.text or (IsAll == True and '10–±' in msg.text):
        SAMPLE_RANGE_NAME = settings.–ü–æ–ª–Ω–æ–µ–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ10–ë
        fullGen(msg, SAMPLE_RANGE_NAME)

    elif '–∏–∑–º–µ–Ω–µ–Ω–∏—è 10–±' in msg.text or (IsZamen == True and '10–±' in msg.text):
        liter = '10–ë'
        zamenGen(msg, liter)

    elif '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ 11–∞' in msg.text or (IsAll == True and '11–∞' in msg.text):
        SAMPLE_RANGE_NAME = settings.–ü–æ–ª–Ω–æ–µ–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ11–ê
        fullGen(msg, SAMPLE_RANGE_NAME)

    elif '–∏–∑–º–µ–Ω–µ–Ω–∏—è 11–∞' in msg.text or (IsZamen == True and '11–∞' in msg.text):
        liter = '11–ê'
        zamenGen(msg, liter)

    elif '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ 11–±' in msg.text or (IsAll == True and '11–±' in msg.text):
        SAMPLE_RANGE_NAME = settings.–ü–æ–ª–Ω–æ–µ–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ11–ë
        fullGen(msg, SAMPLE_RANGE_NAME)

    elif '–∏–∑–º–µ–Ω–µ–Ω–∏—è 11–±' in msg.text or (IsZamen == True and '11–±' in msg.text):
        liter = '11–ë'
        zamenGen(msg, liter)

    else:
        bot.send_message(msg.chat.id, '–ù–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–ª —Å–æ–æ–±—â–µ–Ω–∏–µ')
bot.infinity_polling()